{"version":3,"sources":["assets/css/common.module.css","components/Header/Header.tsx","componentsHelper/CheckBox/CheckBox.tsx","components/Filter/filterList.ts","hooks/useQuery.ts","components/Filter/Filter.tsx","componentsHelper/Button/Button.tsx","components/SortControls/SortControls.tsx","componentsHelper/Loader/Loader.tsx","componentsHelper/Error/Error.tsx","componentsHelper/TicketInfo/TicketInfo.tsx","components/Ticket/TicketsFormat.ts","components/Ticket/Ticket.tsx","api/api.ts","redux/tickets/types.ts","redux/tickets/action.ts","assets/js/sortFilter.ts","components/TicketsList/TicketsList.tsx","hooks/useTickets.ts","assets/js/constants.ts","pages/SearchPage/SearchPage.tsx","redux/tickets/reducer.ts","redux/rootReducer.ts","redux/store.ts","App.tsx","index.tsx","components/Filter/Filter.module.css","componentsHelper/CheckBox/CheckBox.module.css","componentsHelper/Loader/Loader.module.css","componentsHelper/Error/Error.module.css","componentsHelper/TicketInfo/TicketInfo.module.css","components/Ticket/Ticket.module.css","components/Header/Header.module.css","componentsHelper/Button/Button.module.css","App.module.css","assets/images/logo.svg","pages/SearchPage/SearchPage.module.css","components/SortControls/SortControls.module.css","components/TicketsList/TicketsList.module.css","assets/images/spinner.svg"],"names":["module","exports","Header","className","style","header","logo","src","alt","CheckBox","text","name","checked","clickHandler","label","htmlFor","type","onChange","input","id","value","checkbox","filterList","queryOptions","arrayFormat","useQuery","defKey","history","useHistory","location","useLocation","useState","queries","setQueries","defValue","setDefValue","hasKeyValue","useCallback","key","includes","changeKeyValue","push","search","queryString","stringify","getKeyValues","keyValue","Array","isArray","getKeysValues","keys","keyValueObj","forEach","queryRemove","queryCopy","queryToggle","toggle","keyParam","query","filter","item","useEffect","parse","Filter","wrapper","commonStyle","box","title","map","length","Button","active","onClick","button","buttonStatus","by_price","by_time","SortControls","checkActiveButton","status","defActive","checkStatus","sort","Loader","image","spinner","errorMap","Error","refreshTicketsList","error","useSelector","state","tickets","TicketInfo","container","formatTimeNumbers","number","stopsFormat","getTravelTime","time","minutes","getLandingTime","date","fromTimestamp","Date","fromDate","toDate","fromHours","getHours","toHours","toMinutes","getMinutes","fromMinutes","fromString","toString","Ticket","ticket","price","carrier","segments","from1","origin","to1","destination","date1","stops1","stops","duration1","duration","from2","to2","date2","stops2","duration2","Intl","NumberFormat","format","join","aviaApi","axios","create","baseURL","timeout","axiosRetry","retries","TicketsSortTypes","TicketsActionTypes","get","url","a","response","data","getSearchID","getTicketsPart","searchId","sortByPrice","b","sortByTime","TicketsList","dispatch","useDispatch","list","isFetching","isFetchingTickets","filtredTickets","setFiltredTickets","queryKeys","setQueryKeys","stopsCount","sortFunctions","queue","copy","slice","func","sortFilter","useTickets","getTicketsList","START_FETCH_TICKETS","ticketPullChain","FETCH_TICKETS_SUCCESS","payload","stop","STOP_FETCH_TICKETS","message","FETCH_TICKETS_FAILED","SearchPage","initialState","sortType","BY_PRICE","rootReduces","combineReducers","action","concat","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","App","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e361c4eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"common_box__1T4yX\"};","import React from \"react\";\nimport logo from \"../../assets/images/logo.svg\";\nimport style from \"./Header.module.css\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className={style.header}>\n      <img className={style.logo} src={logo} alt=\"Site logo\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport style from \"./CheckBox.module.css\";\n\ninterface ICheckBox {\n  text: string;\n  name: string;\n  checked: boolean;\n  clickHandler: () => void;\n}\n\nconst CheckBox: React.FC<ICheckBox> = ({ text, name, checked, clickHandler }) => {\n  return (\n    <li>\n      <label className={style.label} htmlFor={name}>\n        <input\n          type=\"checkbox\"\n          onChange={clickHandler}\n          checked={checked}\n          className={style.input}\n          id={name}\n          name={name}\n          value={name}\n        />\n        <span className={style.checkbox} />\n        {text}\n      </label>\n    </li>\n  );\n};\n\nexport default CheckBox;\n","export interface IFilterItem {\n  text: string;\n  name: string;\n  value: string;\n}\n\nexport const filterList: IFilterItem[] = [\n  {\n    text: \"Все\",\n    name: \"filter__all__transfer\",\n    value: \"all\",\n  },\n  {\n    text: \"Без пересадок\",\n    name: \"filter__without__transfer\",\n    value: \"0\",\n  },\n  {\n    text: \"1 пересадка\",\n    name: \"filter__one__transfer\",\n    value: \"1\",\n  },\n  {\n    text: \"2 пересадка\",\n    name: \"filter__two__transfer\",\n    value: \"2\",\n  },\n  {\n    text: \"3 пересадка\",\n    name: \"filter__three__transfer\",\n    value: \"3\",\n  },\n];\n","import { useHistory, useLocation } from \"react-router-dom\";\nimport queryString, { ParsedQuery, ParseOptions } from \"query-string\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst queryOptions: ParseOptions = { arrayFormat: \"comma\" };\n\nexport type HasKeyValueType = (key: string | string[] | undefined | null, value: string) => boolean;\nexport type QueryToggleType = (key: string, value: string, toggle?: boolean) => void;\nexport type GetKeyValueType = (key: string) => string[];\nexport type QueryPushType = (key: string, value: string | string[]) => void;\nexport type GetKeysValuesType = (keys: string[]) => GetKeysValuesReturnType;\nexport type QueryRemoveType = (key: string) => void;\n\nexport interface GetKeysValuesReturnType {\n  [key: string]: string[];\n}\n\ninterface IUseQueryReturn {\n  hasKeyValue: HasKeyValueType;\n  queryToggle: QueryToggleType;\n  getKeyValues: GetKeyValueType;\n  changeKeyValue: QueryPushType;\n  getKeysValues: GetKeysValuesType;\n  queryRemove: QueryRemoveType;\n  defValue: string[];\n}\n\nexport type UseQueryType = (defKey?: string) => IUseQueryReturn;\n\n/**\n * Custom hook which allows work with URL query more comfortable\n * @param defKey default key wich value you want to get every update\n */\n\nconst useQuery: UseQueryType = (defKey) => {\n  const history = useHistory();\n  const location = useLocation();\n  const [queries, setQueries] = useState<ParsedQuery>({});\n  const [defValue, setDefValue] = useState<string[]>([]);\n\n  const hasKeyValue: HasKeyValueType = useCallback((key, value) => {\n    if (!key) return false;\n    if (typeof key === \"string\") {\n      return key === value;\n    }\n    return key.includes(value);\n  }, []);\n\n  const changeKeyValue: QueryPushType = useCallback(\n    (key, value) => {\n      history.push({\n        search: queryString.stringify(\n          {\n            ...queries,\n            [key]: value,\n          },\n          queryOptions\n        ),\n      });\n    },\n    [history, queries]\n  );\n\n  const getKeyValues: GetKeyValueType = useCallback(\n    (key) => {\n      const keyValue = queries[key];\n      if (keyValue) {\n        return Array.isArray(keyValue) ? keyValue : [keyValue];\n      }\n      return [];\n    },\n    [queries]\n  );\n\n  const getKeysValues: GetKeysValuesType = useCallback(\n    (keys) => {\n      const keyValueObj: GetKeysValuesReturnType = {};\n      keys.forEach((key) => {\n        const keyValue = queries[key];\n        if (keyValue) {\n          keyValueObj[key] = Array.isArray(keyValue) ? keyValue : [keyValue];\n        }\n      });\n      return keyValueObj;\n    },\n    [queries]\n  );\n\n  const queryRemove: QueryRemoveType = useCallback(\n    (key) => {\n      const queryCopy = { ...queries };\n      delete queryCopy[key];\n      history.push({\n        search: queryString.stringify(queryCopy, queryOptions),\n      });\n    },\n    [queries, history]\n  );\n\n  const queryToggle: QueryToggleType = useCallback(\n    (key, value, toggle = true) => {\n      const keyParam = queries[key];\n      const query = hasKeyValue(keyParam, value);\n      if (!query) {\n        if (Array.isArray(keyParam)) {\n          changeKeyValue(key, [...keyParam, value]);\n        } else if (keyParam) {\n          changeKeyValue(key, [keyParam, value]);\n        } else {\n          changeKeyValue(key, value);\n        }\n      } else if (toggle) {\n        if (Array.isArray(keyParam)) {\n          changeKeyValue(\n            key,\n            keyParam.filter((item) => item !== value)\n          );\n        } else {\n          queryRemove(key);\n        }\n      }\n    },\n    [queries, hasKeyValue, changeKeyValue, queryRemove]\n  );\n\n  useEffect(() => {\n    setQueries(queryString.parse(location.search, queryOptions));\n  }, [location]);\n\n  useEffect(() => {\n    if (defKey) {\n      setDefValue(getKeyValues(defKey));\n    }\n  }, [getKeyValues, defKey]);\n\n  return {\n    changeKeyValue,\n    queryToggle,\n    hasKeyValue,\n    getKeyValues,\n    getKeysValues,\n    queryRemove,\n    defValue,\n  };\n};\n\nexport { useQuery };\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\nimport commonStyle from \"../../assets/css/common.module.css\";\nimport CheckBox from \"../../componentsHelper/CheckBox/CheckBox\";\nimport { filterList } from \"./filterList\";\nimport { useQuery } from \"../../hooks/useQuery\";\n\nconst Filter: React.FC = () => {\n  const { defValue, queryToggle, queryRemove } = useQuery(\"filter\");\n\n  return (\n    <div className={style.filter}>\n      <div className={`${style.wrapper} ${commonStyle.box}`}>\n        <h3 className={style.title}>Количество пересадок</h3>\n        <ul>\n          {filterList.map(({ name, text, value }) => (\n            <CheckBox\n              key={name}\n              clickHandler={() => {\n                if (value && value !== \"all\") {\n                  queryToggle(\"filter\", value);\n                } else {\n                  queryRemove(\"filter\");\n                }\n              }}\n              checked={defValue.includes(value) || (!defValue.length && value === \"all\")}\n              text={text}\n              name={name}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { ButtonHTMLAttributes } from \"react\";\nimport style from \"./Button.module.css\";\n\ninterface IButton extends ButtonHTMLAttributes<HTMLButtonElement> {\n  text: string;\n  active?: boolean;\n  clickHandler: () => void;\n}\n\nconst Button: React.FC<IButton> = ({ text, active, clickHandler }) => {\n  return (\n    <button\n      onClick={clickHandler}\n      type=\"button\"\n      className={`${style.button} ${active ? style.active : \"\"}`}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useCallback } from \"react\";\nimport style from \"./SortControls.module.css\";\nimport Button from \"../../componentsHelper/Button/Button\";\nimport { useQuery } from \"../../hooks/useQuery\";\n\ninterface IButtonStatus {\n  [key: string]: string | undefined;\n}\n\nconst buttonStatus: IButtonStatus = {\n  by_price: \"by_price\",\n  by_time: \"by_time\",\n};\n\nconst SortControls: React.FC = () => {\n  const { changeKeyValue, defValue } = useQuery(\"sort\");\n\n  const sortByDuration = () => {\n    changeKeyValue(\"sort\", \"by_time\");\n  };\n\n  const sortByPrice = () => {\n    changeKeyValue(\"sort\", \"by_price\");\n  };\n\n  const checkActiveButton = useCallback(\n    (status: string, defActive = false): boolean => {\n      const checkStatus = buttonStatus[defValue[0]];\n      return checkStatus ? defValue[0] === status : defActive;\n    },\n    [defValue]\n  );\n\n  return (\n    <div className={style.sort}>\n      <Button\n        text=\"Самый дешевый\"\n        active={checkActiveButton(\"by_price\", true)}\n        clickHandler={sortByPrice}\n      />\n      <Button\n        text=\"Самый быстрый\"\n        active={checkActiveButton(\"by_time\")}\n        clickHandler={sortByDuration}\n      />\n    </div>\n  );\n};\n\nexport default SortControls;\n","import React from \"react\";\nimport style from \"./Loader.module.css\";\nimport commonStyle from \"../../assets/css/common.module.css\";\nimport spinner from \"../../assets/images/spinner.svg\";\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={`${style.wrapper} ${commonStyle.box}`}>\n      <p className={style.text}>Загружаем билеты...</p>\n      <img className={style.image} src={spinner} alt=\"loader\" />\n    </div>\n  );\n};\n\nexport { Loader };\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport commonStyle from \"../../assets/css/common.module.css\";\nimport { RootState } from \"../../types/redux\";\nimport style from \"./Error.module.css\";\n\ninterface IError {\n  refreshTicketsList: () => void;\n}\n\ntype ErrorMapType = {\n  [string: string]: string;\n};\n\nconst errorMap: ErrorMapType = {\n  \"timeout of 1500ms exceeded\": \"Истекло время ожидания! (timeout)\",\n  \"Request failed with status code 404\": \"Сервер не отвечает! (404)\",\n  \"Request failed with status code 500\": \"Ошибка ответа сервера! (505)\",\n};\n\nconst Error: React.FC<IError> = ({ refreshTicketsList }) => {\n  const error = useSelector((state: RootState) => state.tickets.error);\n\n  return (\n    <div className={`${commonStyle.box} ${style.wrapper}`}>\n      <p className={style.text}>{errorMap[error] ? errorMap[error] : \"Неизвестная ошибка!\"}</p>\n      <button onClick={refreshTicketsList} className={style.button} type=\"button\">\n        Попробовать еще раз?\n      </button>\n    </div>\n  );\n};\n\nexport { Error };\n","import React from \"react\";\nimport style from \"./TicketInfo.module.css\";\n\ninterface ITicketInfo {\n  title: string;\n  text?: string;\n}\n\nconst TicketInfo: React.FC<ITicketInfo> = ({ title, text }) => {\n  return (\n    <div className={style.container}>\n      <div className={style.title}>{title}</div>\n      <div className={style.text}>{text || `- / -`}</div>\n    </div>\n  );\n};\n\nexport default TicketInfo;\n","const formatTimeNumbers = (number: number): string => {\n  return number < 10 ? `0${number}` : `${number}`;\n};\n\nexport const stopsFormat: Array<string> = [\n  \"Без пересадок\",\n  \"1 Пересадка\",\n  \"2 Пересадки\",\n  \"3 Пересадки\",\n  \"4 Пересадки\",\n  \"5 Пересадок\",\n  \"6 Пересадок\",\n  \"7 Пересадок\",\n  \"8 Пересадок\",\n  \"9 Пересадок\",\n  \"10 Пересадок\",\n];\n\nexport const convertPrice = (number: number): string => {\n  return new Intl.NumberFormat(\"ru-RU\").format(number);\n};\n\nexport const getTravelTime = (time: number): string => {\n  const minutes = time % 60;\n  const hours = (time - minutes) / 60;\n  return `${hours}ч ${minutes}м`;\n};\n\nexport const getLandingTime = (date: string, time: number): string => {\n  const fromTimestamp = Date.parse(date);\n  const fromDate = new Date(date);\n  const toTimeStamp = fromTimestamp + time * 60 * 1000;\n  const toDate = new Date(toTimeStamp);\n  const fromHours = formatTimeNumbers(fromDate.getHours());\n  const toHours = formatTimeNumbers(toDate.getHours());\n  const toMinutes = formatTimeNumbers(toDate.getMinutes());\n  const fromMinutes = formatTimeNumbers(fromDate.getMinutes());\n  const fromString = `${fromHours}:${fromMinutes}`;\n  const toString = `${toHours}:${toMinutes}`;\n  return `${fromString} - ${toString}`;\n};\n","import React from \"react\";\nimport TicketInfo from \"../../componentsHelper/TicketInfo/TicketInfo\";\nimport commonStyle from \"../../assets/css/common.module.css\";\nimport style from \"./Ticket.module.css\";\nimport { stopsFormat, convertPrice, getTravelTime, getLandingTime } from \"./TicketsFormat\";\nimport { ITicketItem } from \"../../types/tickets\";\n\ninterface ITicket {\n  ticket: ITicketItem;\n}\n\nconst Ticket: React.FC<ITicket> = ({ ticket }) => {\n  const { price, carrier, segments } = ticket;\n  const {\n    origin: from1,\n    destination: to1,\n    date: date1,\n    stops: stops1,\n    duration: duration1,\n  } = segments[0];\n  const {\n    origin: from2,\n    destination: to2,\n    date: date2,\n    stops: stops2,\n    duration: duration2,\n  } = segments[1];\n\n  return (\n    <li className={`${style.ticket} ${commonStyle.box}`}>\n      <div className={style.price}>{convertPrice(price)} P</div>\n      <img className={style.image} src={`http://pics.avs.io/99/36/${carrier}.png`} alt=\"airport\" />\n      <TicketInfo title={`${from1} - ${to1}`} text={getLandingTime(date1, duration1)} />\n      <TicketInfo title=\"В пути\" text={getTravelTime(duration1)} />\n      <TicketInfo title={stopsFormat[stops1.length]} text={stops1.join()} />\n      <TicketInfo title={`${from2} - ${to2}`} text={getLandingTime(date2, duration2)} />\n      <TicketInfo title=\"В пути\" text={getTravelTime(duration2)} />\n      <TicketInfo title={stopsFormat[stops2.length]} text={stops2.join()} />\n    </li>\n  );\n};\n\nexport { Ticket };\n","import axios, { AxiosResponse } from \"axios\";\nimport axiosRetry from \"axios-retry\";\nimport { IApiResonseID, IApiResponseTickets } from \"../types/tickets\";\n\nconst aviaApi = axios.create({\n  baseURL: \"https://front-test.beta.aviasales.ru/\",\n  timeout: 1500,\n});\n\naxiosRetry(aviaApi, { retries: 2 });\n\nconst get = async <T>(url: string): Promise<T> => {\n  const response: AxiosResponse<T> = await aviaApi(url);\n  return response.data;\n};\n\nexport const getSearchID = async (): Promise<IApiResonseID> => get(\"search\");\nexport const getTicketsPart = async (searchId: string): Promise<IApiResponseTickets> => {\n  return get(`/tickets?searchId=${searchId}`);\n};\n","import { ITicketItem } from \"../../types/tickets\";\n\nexport enum TicketsSortTypes {\n  BY_PRICE = \"BY_PRICE\",\n  BY_SPEED = \"BY_SPEED\",\n}\n\nexport interface ITicketsState {\n  readonly list: ITicketItem[];\n  readonly sortType: TicketsSortTypes;\n  readonly requestId?: string;\n  readonly isFetchingTickets: boolean;\n  readonly error: string;\n}\n\nexport enum TicketsActionTypes {\n  START_FETCH_TICKETS = \"START_FETCH_TICKETS\",\n  STOP_FETCH_TICKETS = \"STOP_FETCH_TICKETS\",\n  FETCH_TICKETS_FAILED = \"FETCH_TICKETS_FAILED\",\n  FETCH_TICKETS_SUCCESS = \"FETCH_TICKETS_SUCCESS\",\n}\n\nexport interface ITicketsActions {\n  type: TicketsActionTypes;\n}\n\nexport interface FetchTicketsSuccessAction extends ITicketsActions {\n  type: TicketsActionTypes.FETCH_TICKETS_SUCCESS;\n  payload: ITicketItem[];\n}\n\nexport interface StartFetchTicketsAction extends ITicketsActions {\n  type: TicketsActionTypes.START_FETCH_TICKETS;\n}\n\nexport interface StopFetchTicketsAction extends ITicketsActions {\n  type: TicketsActionTypes.STOP_FETCH_TICKETS;\n}\n\nexport interface FetchTicketsFailedAction extends ITicketsActions {\n  type: TicketsActionTypes.FETCH_TICKETS_FAILED;\n  payload: string;\n}\n\nexport type TicketActions =\n  | FetchTicketsSuccessAction\n  | FetchTicketsFailedAction\n  | StartFetchTicketsAction\n  | StopFetchTicketsAction;\n","import { getSearchID, getTicketsPart } from \"../../api/api\";\nimport { ThunkResult } from \"../../types/redux\";\nimport { ITicketItem } from \"../../types/tickets\";\nimport { TicketsActionTypes, TicketActions } from \"./types\";\n\nexport const fetchTicketsSuccess = (tickets: ITicketItem[]): TicketActions => ({\n  type: TicketsActionTypes.FETCH_TICKETS_SUCCESS,\n  payload: tickets,\n});\n\nexport const fetchTicketsFailed = (error: string): TicketActions => ({\n  type: TicketsActionTypes.FETCH_TICKETS_FAILED,\n  payload: error,\n});\n\nexport const startFetchTickets = (): TicketActions => ({\n  type: TicketsActionTypes.START_FETCH_TICKETS,\n});\n\nexport const stopFetchTickets = (): TicketActions => ({\n  type: TicketsActionTypes.STOP_FETCH_TICKETS,\n});\n\nexport const getTickets = (): ThunkResult<Promise<TicketActions>> => {\n  return async (dispatch) => {\n    dispatch(startFetchTickets());\n    try {\n      const { searchId } = await getSearchID();\n      const ticketPullChain = async (url: string) => {\n        const response = await getTicketsPart(url);\n        dispatch(fetchTicketsSuccess(response.tickets));\n        if (!response.stop) {\n          await ticketPullChain(url);\n        }\n      };\n\n      await ticketPullChain(searchId);\n      return dispatch(stopFetchTickets());\n    } catch (error) {\n      return dispatch(fetchTicketsFailed(error.message));\n    }\n  };\n};\n","import { ITicketItem } from \"../../types/tickets\";\nimport { DEFAULT_COUNT_TICKETS } from \"./constants\";\n\ntype SortFilterFuncType = (tickets: ITicketItem[]) => ITicketItem[];\ntype FuncArrayTypes = SortFilterFuncType[];\n\ntype SortFilterType = (\n  tickets: ITicketItem[],\n  queue: FuncArrayTypes,\n  length?: number\n) => ITicketItem[];\n\ntype FilterByStopsType = (stopsCount: string[]) => SortFilterFuncType;\n\nexport const filterByStops: FilterByStopsType = (stopsCount) => {\n  return (tickets) => {\n    return tickets.filter((item) => {\n      if (!stopsCount.length) return item;\n      const stops = item.segments[0].stops.length + item.segments[1].stops.length;\n      return stopsCount.includes(`${stops}`);\n    });\n  };\n};\n\nexport const sortByPrice: SortFilterFuncType = (tickets) => {\n  return tickets.sort((a, b) => a.price - b.price);\n};\n\nexport const sortByTime: SortFilterFuncType = (tickets) => {\n  return tickets.sort((a, b) => {\n    const firstDuration = a.segments[0].duration + a.segments[1].duration;\n    const secondDuration = b.segments[0].duration + b.segments[1].duration;\n    return firstDuration - secondDuration;\n  });\n};\n\n/**\n *\n * @param tickets Array of tickets wich we want to SORT and then FILTER\n * @param queue Array of Functions.\n * ATTENTION: first of all SORT function\n * array and then FILTER function\n * @param length Return array length\n */\n\nexport const sortFilter: SortFilterType = (tickets, queue, length = DEFAULT_COUNT_TICKETS) => {\n  let copy = tickets.slice();\n  if (queue.length) {\n    queue.forEach((func) => {\n      if (func) {\n        copy = func(copy);\n      }\n    });\n  }\n  copy = copy.slice(0, length);\n  return copy;\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport style from \"./TicketsList.module.css\";\nimport { Loader } from \"../../componentsHelper/Loader/Loader\";\nimport { Error } from \"../../componentsHelper/Error/Error\";\nimport { Ticket } from \"../Ticket/Ticket\";\nimport { ITicketItem } from \"../../types/tickets\";\nimport { getTickets } from \"../../redux/tickets/action\";\nimport { useTickets } from \"../../hooks/useTickets\";\n\n// interface ITicketsList {\n//   getQueries: GetKeysValuesType;\n// }\n\nconst TicketsList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { tickets, error, isFetching } = useTickets();\n\n  const getTicketsList = useCallback(() => {\n    dispatch(getTickets());\n  }, [dispatch]);\n\n  useEffect(() => {\n    getTicketsList();\n  }, [getTicketsList]);\n\n  return (\n    <ul className={style.tickets}>\n      {isFetching && <Loader />}\n      {!isFetching && error && <Error refreshTicketsList={getTicketsList} />}\n      {tickets.slice(0, 5).map((ticket: ITicketItem) => (\n        <Ticket\n          key={`${ticket.price}${ticket.segments[0].date}${ticket.carrier}`}\n          ticket={ticket}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TicketsList;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { filterByStops, sortByPrice, sortByTime, sortFilter } from \"../assets/js/sortFilter\";\nimport { RootState } from \"../types/redux\";\nimport { ITicketItem } from \"../types/tickets\";\nimport { GetKeysValuesReturnType, useQuery } from \"./useQuery\";\n\nconst useTickets = () => {\n  const { getKeysValues } = useQuery();\n  const tickets = useSelector((state: RootState) => state.tickets.list);\n  const isFetching = useSelector((state: RootState) => state.tickets.isFetchingTickets);\n  const error = useSelector((state: RootState) => state.tickets.error);\n  const [filtredTickets, setFiltredTickets] = useState<ITicketItem[]>([]);\n  const [queryKeys, setQueryKeys] = useState<GetKeysValuesReturnType>({});\n\n  useEffect(() => {\n    setQueryKeys(getKeysValues([\"filter\", \"sort\"]));\n  }, [getKeysValues]);\n\n  useEffect(() => {\n    const sortFunctions = [];\n\n    if (queryKeys.sort) {\n      switch (queryKeys.sort[0]) {\n        case \"by_time\":\n          sortFunctions.push(sortByTime);\n          break;\n        case \"by_price\":\n          sortFunctions.push(sortByPrice);\n          break;\n        default:\n          sortFunctions.push(sortByPrice);\n          break;\n      }\n    } else {\n      sortFunctions.push(sortByPrice);\n    }\n\n    if (queryKeys.filter) {\n      const stops = Array.isArray(queryKeys.filter) ? queryKeys.filter : [queryKeys.filter];\n      sortFunctions.push(filterByStops(stops));\n    }\n\n    setFiltredTickets(sortFilter(tickets, sortFunctions));\n  }, [tickets, queryKeys]);\n\n  return {\n    tickets: filtredTickets,\n    isFetching,\n    error,\n  };\n};\n\nexport { useTickets };\n","const DEFAULT_COUNT_TICKETS = 5;\n\nexport { DEFAULT_COUNT_TICKETS };\n","import React from \"react\";\nimport style from \"./SearchPage.module.css\";\nimport Filter from \"../../components/Filter/Filter\";\nimport SortControls from \"../../components/SortControls/SortControls\";\nimport TicketsList from \"../../components/TicketsList/TicketsList\";\n\nconst SearchPage: React.FC = () => {\n  return (\n    <main className={style.container}>\n      <Filter />\n      <SortControls />\n      <TicketsList />\n    </main>\n  );\n};\n\nexport default SearchPage;\n","import { Reducer } from \"redux\";\nimport { ITicketsState, TicketActions, TicketsActionTypes, TicketsSortTypes } from \"./types\";\n\nconst initialState: ITicketsState = {\n  list: [],\n  sortType: TicketsSortTypes.BY_PRICE,\n  isFetchingTickets: false,\n  error: \"\",\n};\n\nconst ticketsReducer: Reducer<ITicketsState, TicketActions> = (state = initialState, action) => {\n  switch (action.type) {\n    case TicketsActionTypes.START_FETCH_TICKETS:\n      return {\n        ...state,\n        list: [],\n        error: \"\",\n        isFetchingTickets: true,\n      };\n    case TicketsActionTypes.STOP_FETCH_TICKETS:\n      return {\n        ...state,\n        isFetchingTickets: false,\n      };\n    case TicketsActionTypes.FETCH_TICKETS_SUCCESS:\n      return {\n        ...state,\n        list: state.list.concat(action.payload),\n      };\n    case TicketsActionTypes.FETCH_TICKETS_FAILED:\n      return {\n        ...state,\n        isFetchingTickets: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { ticketsReducer };\n","import { combineReducers } from \"redux\";\nimport { ticketsReducer } from \"./tickets/reducer\";\n\nconst rootReduces = combineReducers({\n  tickets: ticketsReducer,\n});\n\nexport default rootReduces;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\nimport { ActionTypes, RootState } from \"../types/redux\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk as ThunkMiddleware<RootState, ActionTypes>))\n);\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport style from \"./App.module.css\";\nimport Header from \"./components/Header/Header\";\nimport SearchPage from \"./pages/SearchPage/SearchPage\";\nimport store from \"./redux/store\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <div className={style.container}>\n        <Header />\n        <SearchPage />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\n// const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router basename=\"/AviasalesTest\">\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2qU36\",\"wrapper\":\"Filter_wrapper__hPpeG\",\"title\":\"Filter_title__3R7Xg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckBox_label__3V3aj\",\"checkbox\":\"CheckBox_checkbox__y8PrJ\",\"input\":\"CheckBox_input__zBkPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__vR7c9\",\"image\":\"Loader_image__3RupG\",\"text\":\"Loader_text__16Axc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error_wrapper__2IKMv\",\"text\":\"Error_text__2kR2U\",\"button\":\"Error_button__J_1Em\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TicketInfo_container__L7j5D\",\"title\":\"TicketInfo_title__Omcj-\",\"text\":\"TicketInfo_text__1iKv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ticket\":\"Ticket_ticket__3NE55\",\"price\":\"Ticket_price__cJb_z\",\"image\":\"Ticket_image__2Pf_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__34B2S\",\"logo\":\"Header_logo__3BNsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1AJp4\",\"active\":\"Button_active__hwebA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Ehqj\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c4580fba.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchPage_container__l759l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sort\":\"SortControls_sort__1vB_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tickets\":\"TicketsList_tickets__2gdvp\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.f7f06c52.svg\";"],"sourceRoot":""}